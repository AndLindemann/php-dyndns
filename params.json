{"name":"PHP DynDNS","tagline":"SchlundTech DynDNS backend for PHP.","body":"# PHP DynDNS\r\n\r\nInstallation\r\n------------\r\n\r\n### Prerequisites\r\n\r\n- Contract with Schlund-Technologies and access to the [XML-Gateway](http://www.schlundtech.com/services/xml-gateway/).\r\n- Webserver with PHP and php-curl.\r\n\r\n### Setup\r\n\r\n1. Create a subdomain with an A-record in your domain, say `home.example.com`. It should have a low TTL value such that it is not cached (schlundtech only allows >=60).\r\n2. Upload the files to your webserver. The `update.php` script has to be accessible from the web, for example: `dyndns.example.com/update.php`. *HTTPS is highly recommended!*\r\n3. Copy `config.example.php` to `config.php` and adjust the settings.\r\n4. Create the logdir and give the webserver write-access to it.\r\n5. Set up a cron-job, fritz-box, router, ... to do a request every time the ip-address changes. The URL is `http://dyndns.example.com/update.php?pass=<password>&domain=home.example.com&ipaddr=<ipaddr>&ip6addr=<ip6addr>`\r\n\r\n### NGINX configuration\r\n\r\nThis is an example configuration for nginx:\r\n\r\n```\r\nserver {\r\n  # your settings\r\n\r\n  location ~ /\\.git {\r\n    deny all;\r\n  }\r\n\r\n  location ~ ^/config.*.php { deny all; }\r\n  location ~ ^/request-get.xml { deny all; }\r\n  location ~ ^/request-put.xml  { deny all; }\r\n  location ~ ^/logs/  { deny all; }\r\n}\r\n```\r\n\r\nRoadmap\r\n-------\r\n\r\n- Standardize API, e.g. like [Dyn.com](http://dyn.com/support/developers/api/perform-update/)\r\n- Security-Audit\r\n- Rolling log files","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}